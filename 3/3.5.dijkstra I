#include <bits/stdc++.h>
using namespace std;
const int N = 510, INF = 0x3f3f3f3f;
int n, m, x, y, z;
int g[N][N], dt[N];
bool st[N];

void Init(){
    memset(dt,0x3f,sizeof(dt));
    memset(g,0x3f,sizeof(g));
    cin >> n >> m;
    for(int i=1;i<=m;i++){
        cin >> x >> y >> z;
        g[x][y] = min(g[x][y],z);
    }
}
void dijkstra(){
    dt[1] = 0;
    for(int i=1;i<=n;i++){
        int t = -1;
        for(int j=1;j<=n;j++){
            if(!st[j] && (t==-1 || dt[t]>dt[j])) 
                t = j;
        }
        st[t] = 1;
        if(t==n) return;
        for(int j=1;j<=n;j++){
            dt[j] = min(dt[j],dt[t]+g[t][j]);
        }
    }
}

int main(){
    Init();
    dijkstra(); 
    cout << (dt[n]==INF?-1:dt[n]) << endl;
    return 0;
}