#include <bits/stdc++.h>
using namespace std;
const int N = 510, INF = 0x3f3f3f3f;
int n, m, g[N][N], dt[N], pre[N];
bool st[N];

void Init(){
    memset(dt,0x3f,sizeof(dt));
    memset(g,0x3f,sizeof(g));
    cin >> n >> m;
    while(m--){
        int u, v, w;
        cin >> u >> v >> w;
        g[u][v] = g[v][u] = min(g[u][v],w);
    }
}

int Prim(){
    int res = 0;
    for(int i=0;i<n;i++){
        int t = -1;
        for(int j=1;j<=n;j++)
            if(!st[j] && (t==-1 || dt[t]>dt[j])) t = j;
        st[t] = 1;
        
        if(i && dt[t]==INF) return INF;
        if(i) res += dt[t];
        for(int j=1;j<=n;j++){
            if(!st[j] && dt[j]>g[t][j]){
                dt[j] = g[t][j];
                pre[j] = t;
            }
        }
    }
    return res;
}

void Printpath(){
    for(int i=1;i<=n;i++){
        if(st[i] && i>1){
            cout << pre[i] << "---" << i << endl;
        }
    }
}

int main(){
    Init();
    int res = Prim();
    if(res==INF) puts("impossible");
    else{
        cout << res << endl;
        Printpath();
    }
    return 0;
}