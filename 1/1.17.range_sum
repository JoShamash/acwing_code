#include <bits/stdc++.h>
using namespace std;
const int N = 3e5+10;
typedef pair<int,int> PII;
int n,m;
int a[N], s[N];
vector<int> alls;
vector<PII> add, query;

void Init(){
    cin >> n >> m;
    for(int i=0;i<n;i++){
        int x, c;
        cin >> x >> c;
        add.push_back({x,c});
        alls.push_back(x);
    }
    for(int j=0;j<m;j++){
        int l, r;
        cin >> l >> r;
        query.push_back({l,r});
        alls.push_back(l), alls.push_back(r);
    }
    sort(alls.begin(),alls.end());
    alls.erase(unique(alls.begin(),alls.end()),alls.end());
}
int find(int x){
    int l = 0, r = alls.size()-1;
    while(l<r){
        int mid = l+r>>1;
        if(alls[mid]>=x) r=mid;
        else l = mid+1;
    }
    return l+1;
}
int Rangesum(int l,int r){
    return s[r]-s[l-1];
}

int main(){
    Init();
    for(auto i: add){
        int index = find(i.first);
        a[index] += i.second;
    }
    for(int i=1;i<=alls.size();i++) s[i] = s[i-1] + a[i];
    for(auto i: query){
        int l = find(i.first), r = find(i.second);
        cout << Rangesum(l,r) << endl;
    }
    return 0;
}